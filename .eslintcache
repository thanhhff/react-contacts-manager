[{"/home/ec2-user/environment/react-contacts-manager/src/index.js":"1","/home/ec2-user/environment/react-contacts-manager/src/reportWebVitals.js":"2","/home/ec2-user/environment/react-contacts-manager/src/App.js":"3","/home/ec2-user/environment/react-contacts-manager/src/components/contact-view.js":"4","/home/ec2-user/environment/react-contacts-manager/src/components/contact-form.js":"5","/home/ec2-user/environment/react-contacts-manager/src/components/contact-table.js":"6","/home/ec2-user/environment/react-contacts-manager/src/components/contact-context.js":"7","/home/ec2-user/environment/react-contacts-manager/src/hooks/storage.js":"8"},{"size":543,"mtime":1618315325333,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1618315325333,"results":"11","hashOfConfig":"10"},{"size":314,"mtime":1618315325333,"results":"12","hashOfConfig":"10"},{"size":468,"mtime":1618315325333,"results":"13","hashOfConfig":"10"},{"size":1433,"mtime":1618315325333,"results":"14","hashOfConfig":"10"},{"size":1811,"mtime":1618315325333,"results":"15","hashOfConfig":"10"},{"size":1066,"mtime":1618316863655,"results":"16","hashOfConfig":"10"},{"size":766,"mtime":1618315325333,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1febi0m",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ec2-user/environment/react-contacts-manager/src/index.js",[],["36","37"],"/home/ec2-user/environment/react-contacts-manager/src/reportWebVitals.js",[],"/home/ec2-user/environment/react-contacts-manager/src/App.js",[],"/home/ec2-user/environment/react-contacts-manager/src/components/contact-view.js",[],"/home/ec2-user/environment/react-contacts-manager/src/components/contact-form.js",["38"],"import React, { useState, useContext } from \"react\";\nimport { Segment, Form, Input, Button } from \"semantic-ui-react\";\nimport _ from \"lodash\";\nimport { ContactContext } from \"./contact-context\";\n\nexport default function ContactForm() {\n  const name = useFormInput(\"\");\n  const email = useFormInput(\"\");\n  const [state, dispatch] = useContext(ContactContext);\n\n  const onSubmit = () => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: { id: _.uniqueId(10), name: name.value, email: email.value }\n    });\n    // Reset Form\n    name.onReset();\n    email.onReset();\n  };\n\n  return (\n    <Segment basic>\n      <Form onSubmit={onSubmit}>\n        <Form.Group widths=\"3\">\n          <Form.Field width={6}>\n            <Input placeholder=\"名前\" {...name} required />\n          </Form.Field>\n          <Form.Field width={6}>\n            <Input placeholder=\"メール\" {...email} type=\"email\" required />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Button fluid primary>\n              新しいコンタクト\n            </Button>\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </Segment>\n  );\n}\n\nfunction useFormInput(initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleReset = () => {\n    setValue(\"\");\n  };\n\n  return {\n    value,\n    onChange: handleChange,\n    onReset: handleReset\n  };\n}","/home/ec2-user/environment/react-contacts-manager/src/components/contact-table.js",[],"/home/ec2-user/environment/react-contacts-manager/src/components/contact-context.js",["39"],"/home/ec2-user/environment/react-contacts-manager/src/hooks/storage.js",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":9,"column":10,"nodeType":"47","messageId":"48","endLine":9,"endColumn":15},{"ruleId":null,"fatal":true,"severity":2,"message":"49","line":13,"column":20},{"ruleId":"50","severity":1,"message":"51","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":22},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 11 | \u001b[39m  \u001b[36mswitch\u001b[39m (action\u001b[33m.\u001b[39mtype) {\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[32m\"ADD_CONTACT\"\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m      addContact([ \u001b[33m.\u001b[39m\u001b[33m.\u001b[39mcontacts\u001b[33m,\u001b[39m action\u001b[33m.\u001b[39mpayload])\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m      \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m        contacts\u001b[33m:\u001b[39m [ \u001b[33m...\u001b[39mcontacts\u001b[33m,\u001b[39m action\u001b[33m.\u001b[39mpayload]\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m      }\u001b[33m;\u001b[39m\u001b[0m","no-redeclare","'localStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","no-global-assign","no-unsafe-negation"]